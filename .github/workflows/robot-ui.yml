name: CI Robot UI

on:
    workflow_dispatch:
    push:
        branches:
            - feature/frw-5940/master-support-symfony-security-v6-robot

jobs:
    docker-alpine-php-8-1-mariadb-robot-ui:
        name: "Docker / Alpine / PHP 8.1 / MariaDB / Robot / UI"
        runs-on: ubuntu-20.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:8.1
            TRAVIS: 1
            ROBOT_TESTS_ARTIFACTS_BUCKET_REGION: eu-west-1
        steps:
            - uses: actions/checkout@v3

            - uses: actions/setup-python@v4
              with:
                  python-version: '3.9'

            - name: Install packages
              run: |
                  sudo apt update
                  sudo apt-get install apache2-utils
                  sudo apt install awscli -q
                  python3 -m pip install --upgrade pip
                  python3 -m pip install -U robotframework
                  python3 -m pip install -U robotframework-requests
                  python3 -m pip install -U robotframework-jsonlibrary
                  python3 -m pip install -U robotframework-databaselibrary
                  python3 -m pip install -U robotframework-browser
                  python3 -m pip install PyMySQL
            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/2.12.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose
            - name: Install Robot tests
              run: |
                  git clone https://github.com/spryker/robotframework-suite-tests.git --single-branch --branch ci-smoke-set robotframework-tests
            - name: Install Project
              continue-on-error: true
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot -v deploy.ci.acceptance.mariadb.yml
                  docker/sdk up -t -v
                  APPLICATION_STORE=DE docker/sdk testing console queue:worker:start --stop-when-empty
                  APPLICATION_STORE=AT docker/sdk testing console queue:worker:start --stop-when-empty
                  sudo bash -c "echo '127.0.0.1 backend-api.at.spryker.local backend-api.de.spryker.local backend-gateway.at.spryker.local backend-gateway.de.spryker.local backoffice.at.spryker.local backoffice.de.spryker.local date-time-configurator-example.spryker.local glue.at.spryker.local glue.de.spryker.local yves.at.spryker.local yves.de.spryker.local mp.de.spryker.local mp.at.spryker.local' >> /etc/hosts"
            - name: Run Tests
              run: |
                  cd robotframework-tests
                  rfbrowser init
                  robot -v env:ui_b2b -v headless:true -d results --include smoke --exclude skip-due-to-issueORskip-due-to-refactoring tests/ui/e2e/b2b.robot
                  touch results/time.txt && echo $(date) > results/time.txt
            - name: Upload artifacts
              if: always()
              run: |
                  AWS_DEFAULT_REGION=${{env.ROBOT_TESTS_ARTIFACTS_BUCKET_REGION}} AWS_ACCESS_KEY_ID=${{ secrets.ROBOT_TESTS_ARTIFACTS_KEY }} AWS_SECRET_ACCESS_KEY=${{ secrets.ROBOT_TESTS_ARTIFACTS_SECRET }} aws s3 cp robotframework-tests/results s3://${{vars.ROBOT_TESTS_ARTIFACTS_BUCKET}}/robot-ui-testing/b2b/${GITHUB_RUN_ID}/PHP8.0MariaDBRobotUi/ \
                    --recursive \
                    --expires "$(date -d '+7 days' --utc +'%Y-%m-%dT%H:%M:%SZ')"
