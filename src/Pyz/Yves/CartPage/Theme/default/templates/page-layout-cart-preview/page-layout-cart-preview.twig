{% extends template('page-layout-cart-preview', '@SprykerShop:CartPage') %}

{% define data = {
    products: '',
} %}

{% block header %}
    {% embed organism('header') only %}
        {% block body %}
            <div class="{{ config.name }}__main">
                <div class="container grid grid--middle">
                    {% include molecule('logo') with {
                        class: 'col ' ~  config.name ~ '__logo',
                        modifiers: ['main'],
                    } only %}

                    <div class="col col--right {{ is_granted('ROLE_USER') ? config.name ~ '__user-nav' : config.name ~ '__login-wrap' }}">
                        <a href="{{ is_granted('ROLE_USER') ? url('logout') : url('login') }}" class="button button--tight button--medium {{ config.name }}__login">{{ (is_granted('ROLE_USER') ? 'customer.logout' : 'customer.please_login') | trans }}</a>
                    </div>
                </div>
            </div>
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block pageInfo %}{% endblock %}

{% block cartTitle %}
    {{- 'persistent_cart_share_page.preview' | trans({ '%title%': data.cart.name }) -}}
{% endblock %}

{% block emptyCart %}
    <div class="grid">
        <div class="col col--sm-12">
            {{ block('emptyCartMessage') }}
        </div>
    </div>
{% endblock %}

{% block cartItem %}
    {% embed molecule('product-card-item') with {
        data: {
            list: data.cart,
            listItem: cartItem,
            attributes: data.attributes[cartItem.sku] | default([]),
            canEdit: false,
            canRemove: false,
            imageModifiers: ['cart'],
        },
        embed: {
            product: data.products[cartItem.sku] | default,
        },
    } only %}
        {% block price %}
            {% set price = data.listItem.sumPrice ?? data.listItem.price %}

            {% include molecule('money-price') with {
                modifiers: ['medium', 'gray-color'],
                data: {
                    amount: price,
                    currencyIsoCode: data.list.currency.code,
                },
            } only %}
        {% endblock %}

        {% block info %}
            {{ parent() }}

            {% if embed.product.attributes.farbe is defined %}
                <span class="{{ config.name }}__color-preview">{{ 'cart.item.color' | trans }}: <span class="{{ config.name }}__color-preview-decoration" style="background: {{ embed.product.colorCode  }}" title="{{ embed.product.attributes.farbe  }}"></span></span>
            {% endif %}
        {% endblock %}

        {% block note %}
            {% widget 'CartItemNoteFormWidget' args [data.listItem, data.list] only %}
                {% block body %}
                    {% set canWrite = false %}
                    {{ parent() }}
                {% endblock %}
            {% endwidget %}
        {% endblock %}

        {% block quantity %}
            <div class="{{ config.name }}__quantity">
                <span class="{{ config.name }}__quantity-title">{{ 'cart.item_quantity' | trans }}:</span> {{ data.listItem.quantity | executeFilterIfExists('formatInt', app.locale) }}
            </div>
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block cartSidebar %}
    {% embed organism('cart-sidebar', 'CartPage') with {
        class: 'col col--sm-12 col--xl-3',
        data: {
            cart: data.cart,
            cartItems: data.cartItems,
            cartItemsCount: cartItemsCount,
            isQuoteEditable: data.isQuoteEditable,
            isQuoteValid: data.isQuoteValid,
        },
    } only %}
        {% block cartSummaryItem %}
            {% embed molecule('cart-sidebar-item', 'CartPage') with {
                data: {
                    cart: data.cart,
                    isQuoteValid: data.isQuoteValid,
                    isQuoteEditable: data.isQuoteEditable,
                    isAccordionItem: false,
                },
                modifiers: ['summary'],
                embed: {
                    cartItemsCount: data.cartItemsCount,
                },
            } only %}
                {% block body %}
                    <div class="{{ config.name }}__start grid grid--justify grid--middle">
                        <h6 class="{{ config.name }}__title col">{{ 'cart.your-order' | trans }}</h6>
                        <div class="{{ config.name }}__quantity col">
                            {{ embed.cartItemsCount | executeFilterIfExists('formatInt', app.locale) }} {{ 'checkout.step.summary.items' | trans }}
                        </div>
                    </div>

                    {% set isCartCodeFormWidget = data.isQuoteEditable and can('ChangeCartItemPermissionPlugin') and can('SeePricePermissionPlugin') %}

                    {% if isCartCodeFormWidget %}
                        {% widget 'CartCodeFormWidget' args [data.cart] only %}{% endwidget %}
                    {% endif %}

                    {% block cartSummary %}
                        {% embed molecule('cart-summary', 'CartPage') with {
                            data: {
                                cart: data.cart,
                                isQuoteValid: data.isQuoteValid,
                                isQuoteEditable: data.isQuoteEditable,
                            },
                        } only %}
                            {% block body %}
                                <div class="{{ config.name }}__wrapper">
                                    <ul class="list">
                                        {% block cartSummaryContent %}
                                            <li class="list__item">
                                                {% include molecule('cart-code-summary', 'CartCodeWidget') ignore missing with {
                                                    data: {
                                                        isQuoteEditable: data.isQuoteEditable,
                                                        voucherDiscounts: data.cart.voucherDiscounts,
                                                        ruleDiscounts: data.cart.cartRuleDiscounts,
                                                        discountTotal: data.cart.totals.discounttotal,
                                                        currencyIsoCode: data.cart.currency.code,
                                                    },
                                                } only %}
                                            </li>
                                            {{ block('cartTotal') }}
                                        {% endblock %}
                                    </ul>
                                </div>
                            {% endblock %}
                        {% endembed %}
                    {% endblock %}
                {% endblock %}
            {% endembed %}
        {% endblock %}
    {% endembed %}
{% endblock %}
