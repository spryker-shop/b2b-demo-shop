{% extends template('page-layout-main') %}

{% define data = {
    cart: _view.cart,
    isQuoteEditable: _view.isQuoteEditable,
    isQuoteLocked: _view.isQuoteLocked,
    cartItems: _view.cartItems,
    isQuoteValid: _view.isQuoteValid,
    attributes: _view.attributes,
    request: app.request,
    title: 'cart.cart' | trans,
    requestUri: app.request.requestUri,
} %}

{% block breadcrumbs %}
    {% set steps = [
        {
            label: 'multi_cart_widget.cart.carts' | trans,
            url: url('multi-cart'),
            isActive: false,
        },
        {
            label: data.cart.name ?: data.title,
            isActive: true,
        },
    ]%}

    {% embed molecule('breadcrumb') with {
        data: {
            steps: steps,
        },
    } only %}
        {% block breadcrumbs %}
            {% for step in data.steps %}
                {% set modifiers = step.isActive ? ['active'] : [] %}

                {% include molecule('breadcrumb-step') with {
                    modifiers: modifiers,
                    data: {
                        label: step.label,
                        url: not step.isActive ? step.url,
                        withChevron: not loop.last,
                    },
                } only %}
            {% endfor %}
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block title %}{% endblock %}

{% block contentClass %}page-layout-main page-layout-main--cart-page{% endblock %}

{% block content %}
    {% set isQuoteEnadled = data.cart.idQuote and data.isQuoteEditable %}
    {% set transformedCartItems = productBundleItemCounterWidget.items | default(data.cartItems) %}

    {% if data.cart.items is empty %}
        {% block emptyCart %}
            <div class="grid">
                <div class="col col--xl-9">
                    {% block emptyCartMessage %}
                        <div class="text-center">
                            {% include atom('icon') with {
                                modifiers: ['biggest'],
                                class: 'text-alt',
                                data: {
                                    name: 'shopping-cart',
                                },
                            } only %}
                            <h6>{{ 'cart.empty' | trans }}</h6>
                        </div>
                    {% endblock %}
                </div>
                {% embed organism('cart-sidebar', 'CartPage') with {
                    class: 'col col--xl-3',
                    data: {
                        cart: data.cart,
                        cartItems: data.cartItems,
                        transformedCartItems: transformedCartItems,
                        isQuoteEditable: data.isQuoteEditable,
                        isQuoteValid: data.isQuoteValid,
                    },
                } only %}
                    {% block body %}
                        {% if data.isQuoteEditable %}
                            {% embed molecule('cart-sidebar-item', 'CartPage') with {
                                data: {
                                    title: 'cart.quick_add_to_cart' | trans,
                                    cart: data.cart,
                                    isAccordionItem: false,
                                },
                            } only %}
                                {% block contentInner %}
                                    {% widget 'ProductConcreteAddWidget' args [
                                        '',
                                        'cart.quick_add_to_cart.submit' | trans,
                                        'cart/quick-add',
                                        true,
                                    ] only %}
                                    {% endwidget %}
                                {% endblock %}
                            {% endembed %}
                        {% endif %}

                        {% if data.cart.idQuote is not empty %}
                            {% embed molecule('cart-sidebar-item', 'CartPage') with {
                                data: {
                                    title: 'comment_widget.comments_to_cart' | trans,
                                    cart: data.cart,
                                    isAccordionItem: false,
                                },
                            } only %}
                                {% block contentClasses %}{% endblock %}
                                {% block contentInner %}
                                    {% widget 'CommentThreadWidget' args [
                                        data.cart.idQuote,
                                        'quote',
                                        app.request.requestUri,
                                        data.cart.commentThread,
                                    ] only %}
                                    {% endwidget %}
                                {% endblock %}
                            {% endembed %}
                        {% endif %}
                    {% endblock %}
                {% endembed %}
            </div>
        {% endblock %}
    {% endif %}
    {% if data.cart.items is not empty %}
        {% set productBundleItemCounterWidget = findWidget('ProductBundleItemCounterWidget', [data.cart]) %}

        <div class="grid grid--gap">
            <div class="col col--sm-12 col--xl-9">
                <div class="cart-title">
                    <h3 class="grid grid--nowrap grid--middle cart-title__text">
                        {% block cartTitle %}
                            {{ data.cart.name }}
                            {% if isQuoteEnadled and can('ChangeCartItemPermissionPlugin', data.cart.idQuote) %}
                                <a href="{{ path('multi-cart/update', {idQuote: data.cart.idQuote}) }}" class="col button button--hollow-icon button--edit cart-title__link">
                                    {% include molecule('icon-tooltip') with {
                                        modifiers: ['sm-lg-regular'],
                                        data: {
                                            icon: 'edit',
                                            text: 'multi_cart_widget.cart.action.change_name' | trans,
                                        },
                                    } only %}
                                    <span class="is-hidden-lg-xxl">{{ 'general.edit.button' | trans }}</span>
                                </a>
                            {% endif %}
                        {% endblock %}
                    </h3>
                    <div class="grid grid--justify grid--middle">
                        <div class="col col--sm-8">
                            {% if data.cart.priceMode is not empty %}
                                {% include molecule('price-mode') with {
                                    modifiers: ['sm-lg-regular'],
                                    data: {
                                        priceMode: data.cart.priceMode,
                                    },
                                } only %}
                            {% endif %}
                        </div>
                        <div class="col col--sm-2 text-right cart-title__quantity">{{ transformedCartItems | length }} {{ 'checkout.step.summary.items' | trans }}</div>
                    </div>
                </div>
            </div>
            <div class="col col--sm-12 col--xl-9">
                {% if data.isQuoteLocked %}
                    {% include molecule('cart-locking', 'CartPage') with {
                        data: {
                            quoteApprovals: data.cart.quoteApprovals,
                            quoteRequestVersionReference: data.cart.quoteRequestVersionReference,
                        },
                    } %}
                {% endif %}

                {% widget 'QuoteConfiguredBundleWidget' args [data.cart] with {
                    data: {
                        isEditable: data.isQuoteEditable,
                    },
                } only %}
                {% endwidget %}

                {% for cartItem in transformedCartItems if not cartItem.configuredBundleItem %}
                    {% block cartItem %}
                        {% embed molecule('product-card-item') with {
                            data: {
                                list: data.cart,
                                listItem: cartItem,
                                attributes: data.attributes[cartItem.sku] | default([]),
                                canEdit: data.isQuoteEditable and can('ChangeCartItemPermissionPlugin', data.cart.idQuote),
                                canRemove: data.isQuoteEditable and can('RemoveCartItemPermissionPlugin'),
                                imageModifiers: ['cart'],
                            },
                            embed: {
                                product: data.products[cartItem.sku] | default,
                                hasAdditionalTitle: cartItem.cartNote,
                                additionalTitleText: 'cart_note.form.comment' | trans,
                            },
                        } only %}
                            {% block productDescription %}
                                <div class="{{ config.name }}__col {{ config.name }}__col--description col">
                                    <div class="{{ config.name }}__inner grid grid--stretch grid--gap">
                                        <div class="{{ config.name }}__col {{ config.name }}__col--content col">
                                            {% block title %}
                                                {{ parent() }}
                                            {% endblock %}

                                            {% block info %}
                                                {{ parent() }}

                                                {% if embed.product.attributes.farbe is defined %}
                                                    <span class="{{ config.name }}__color-preview">
                                                        {{ 'cart.item.color' | trans }}:
                                                        <span class="{{ config.name }}__color-preview-decoration" style="background: {{ embed.product.colorCode  }}" title="{{ embed.product.attributes.farbe  }}"></span>
                                                    </span>
                                                {% endif %}
                                            {% endblock %}

                                            {% block productInfo %}
                                                {{ parent() }}
                                            {% endblock %}

                                            {% if embed.hasAdditionalTitle %}
                                                <h6 class="{{ config.name }}__additional-title">{{ embed.additionalTitleText }}:</h6>
                                            {% endif %}
                                        </div>

                                        <div class="{{ config.name }}__col {{ config.name }}__col--total col">
                                            <div class="{{ config.name }}__inner {{ config.name }}__inner--actions {{ config.name }}__inner--full-height grid grid--column grid--justify-column">
                                                <div class="col col--sm-12">
                                                    <div class="{{ config.name }}__inner {{ config.name }}__inner--total grid grid--column">
                                                        {% block price %}
                                                            {% if can('SeePricePermissionPlugin') %}
                                                                {% set subtotalPrice = data.listItem.unitSubtotalAggregation is defined ? data.listItem.unitSubtotalAggregation : data.listItem.price %}

                                                                {% include molecule('money-price') with {
                                                                    modifiers: ['medium', 'block'],
                                                                    data: {
                                                                        amount: subtotalPrice,
                                                                        currencyIsoCode: data.list.currency.code,
                                                                    },
                                                                } only %}
                                                            {% endif %}
                                                        {% endblock %}

                                                        {% block quantity %}
                                                            {% set isEmptyProductInfo = amountSalesUnit is empty and quantitySalesUnit is empty and data.quantity is empty %}

                                                            {% if isEmptyProductInfo %}
                                                                <div class="{{ config.name }}__quantity-holder">
                                                                    {% include molecule('product-item-quantity') with {
                                                                        data: {
                                                                            productItem: data.listItem,
                                                                            isDisabled: not data.canEdit,
                                                                        },
                                                                    } only %}
                                                                </div>
                                                            {% endif %}
                                                        {% endblock %}
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="{{ config.name }}__inner grid grid--stretch grid--gap">
                                        <div class="{{ config.name }}__col {{ config.name }}__col--content col">
                                            {% block note %}
                                                {% widget 'CartItemNoteFormWidget' args [data.listItem, data.list] with {
                                                    data: {
                                                        isTitleVisible: false,
                                                    },
                                                } only %}
                                                {% endwidget %}
                                            {% endblock %}

                                            {% if data.listItem.productOptions is defined and data.listItem.productOptions %}
                                                {% include molecule('product-item-options') with {
                                                    modifiers: modifiers,
                                                    data: {
                                                        productItem: data.listItem,
                                                    },
                                                } only %}
                                            {% endif %}

                                            {% if data.options %}
                                                {% include molecule('product-item-options') with {
                                                    data: {
                                                        options: data.options,
                                                    },
                                                } only %}
                                            {% endif %}
                                        </div>

                                        <div class="{{ config.name }}__col {{ config.name }}__col--total col">
                                            <div class="{{ config.name }}__inner {{ config.name }}__inner--actions {{ config.name }}__inner--full-height grid grid--column grid--justify-column">
                                                <div class="col col--sm-12">
                                                    <div class="{{ config.name }}__inner {{ config.name }}__inner--total grid grid--column">
                                                        {% block totalPrice %}
                                                            {% if can('SeePricePermissionPlugin') %}
                                                                {% set totalPrice = data.listItem.unitPrice is defined ? data.listItem.sumSubtotalAggregation : data.listItem.price %}

                                                                {% embed molecule('money-price') with {
                                                                    class: 'grid grid--wide',
                                                                    modifiers: ['secondary'],
                                                                    data: {
                                                                        amount: totalPrice,
                                                                        currencyIsoCode: data.list.currency.code,
                                                                    },
                                                                } only %}
                                                                    {% block body %}
                                                                        <strong class="col col--sm-4 col--lg-5 text-left">{{ 'cart.item.item_total' | trans }}</strong>

                                                                        {% if data.amount is empty -%}
                                                                            {{ data.noPriceText }}
                                                                        {%- else -%}
                                                                            <span class="{{config.name}}__amount {{config.name}}__amount--secondary col col--sm-8 col--lg-7">
                                                                                {{ data.amount | money(true, data.currencyIsoCode) }}
                                                                            </span>
                                                                        {%- endif -%}
                                                                    {% endblock %}
                                                                {% endembed %}
                                                            {% endif %}
                                                        {% endblock %}
                                                    </div>
                                                </div>

                                                {% block deleteButton %}
                                                    {% if data.canRemove %}
                                                        {% widget 'RemoveFromCartFormWidget' args [data.listItem] with {
                                                            embed: {
                                                                configName: config.name,
                                                            },
                                                        } only %}
                                                            {% block embeddedData %}
                                                                <div class="col {{ embed.configName }}__delete-cart">
                                                                    <button class="link link--icon" title="{{ 'cart.delete.item' | trans }}" data-init-single-click>
                                                                        {% include atom('icon') with {
                                                                            modifiers: ['link'],
                                                                            data: {
                                                                                name: 'delete',
                                                                            },
                                                                        } only %}
                                                                        <span class="is-hidden-sm-md">{{ 'cart.delete.item' | trans }}</span>
                                                                    </button>
                                                                </div>
                                                            {% endblock %}
                                                        {% endwidget %}
                                                    {% endif %}
                                                {% endblock %}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            {% endblock %}
                        {% endembed %}
                    {% endblock %}
                {% endfor %}

                {% if isQuoteEnadled and can('RemoveCartItemPermissionPlugin') %}
                    <div class="grid grid--right cart-bottom">
                        {% widget 'CartOperationsWidget' args [data.cart] use view('cart-operations-actions', 'MultiCartWidget') only %}{% endwidget %}
                    </div>
                {% endif %}

                {% if data.isQuoteEditable %}
                    {% widget 'CartDiscountPromotionProductListWidget' args [
                        data.cart,
                        data.request,
                    ] only %}
                    {% endwidget %}
                {% endif %}
            </div>
            {% block cartSidebar %}
                {% include organism('cart-sidebar', 'CartPage') with {
                    class: 'col col--sm-12 col--xl-3',
                    data: {
                        cart: data.cart,
                        cartItems: data.cartItems,
                        transformedCartItems: transformedCartItems,
                        isQuoteEditable: data.isQuoteEditable,
                        isQuoteValid: data.isQuoteValid,
                    },
                } only %}
            {% endblock %}
        </div>
        {% if data.isQuoteEditable %}
            {% widget 'UpSellingProductsWidget' args [data.cart] only %}{% endwidget %}
        {% endif %}
    {% endif %}
{% endblock %}
