{% extends model('component') %}

{% define config = {
    name: 'cart-sidebar',
} %}

{% define data = {
    cart: required,
    cartItems: required,
    cartItemsCount: 0,
    isQuoteEditable: required,
    isQuoteValid: required,
    ajaxTriggerAttribute: '',
} %}

{% block class %}
    {{ parent() }} {{ config.jsName }}
{% endblock %}

{% block body %}
    {% set isPermission = data.isQuoteEditable and can('ChangeCartItemPermissionPlugin') %}
    {% set isQuoteAndItems = data.cart.idQuote is not empty and data.cart.items is not empty %}

    {% if isPermission and isQuoteAndItems %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'cart.add-to-shopping-list' | trans,
                cart: data.cart,
                accordionItemClass: 'toggler-accordion__item',
                accordionIconClass: 'toggler-accordion__icon',
                ajaxTriggerAttribute: data.ajaxTriggerAttribute,
            },
        } only %}
            {% block titleAttributes %}
                data-toggle-target='.js-cart-sidebar-item__content-shopping-list'
            {% endblock %}

            {% block contentClasses %}
                {{ config.jsName }}__content-shopping-list {{ parent() }}
            {% endblock %}

            {% block contentInner %}
                 {% widget 'CreateShoppingListFromCartWidget' args [data.cart.idQuote] with {
                    data: {
                        ajaxTriggerAttribute: data.ajaxTriggerAttribute,
                    },
                } only %}
                {% endwidget %}
            {% endblock %}
        {% endembed %}
    {% endif %}

    {% if data.isQuoteEditable %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'cart.quick_add_to_cart' | trans,
                cart: data.cart,
                accordionItemClass: 'toggler-accordion__item',
                accordionIconClass: 'toggler-accordion__icon',
                ajaxTriggerAttribute: data.ajaxTriggerAttribute,
            },
        } only %}
            {% block titleAttributes %}
                data-toggle-target='.js-cart-sidebar-item__content-quick-add-widget'
            {% endblock %}

            {% block contentClasses %}
                {{ config.jsName }}__content-quick-add-widget {{ parent() }}
            {% endblock %}

            {% block contentInner %}
                {% widget 'ProductConcreteAddWidget' args [
                    '',
                    'cart.quick_add_to_cart.submit' | trans,
                    'cart/quick-add',
                    true,
                ] with {
                    data: {
                        ajaxTriggerAttribute: data.ajaxTriggerAttribute,
                    },
                } only %}
                {% endwidget %}
            {% endblock %}
        {% endembed %}

        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'persistent_cart_share.title' | trans,
                cart: data.cart,
                accordionItemClass: 'toggler-accordion__item',
                accordionIconClass: 'toggler-accordion__icon',
            },
            modifiers: ['with-label','shadow-less'],
        } only %}
            {% block titleAttributes %}
                data-toggle-target='.js-cart-sidebar-item__content-share-by-link-widget'
            {% endblock %}

            {% block contentClasses %}
                {{ config.jsName }}__content-share-by-link-widget {{ parent() }}
            {% endblock %}

            {% block contentInner %}
                {% widget 'ShareCartByLinkWidget' args [data.cart] only %}{% endwidget %}
            {% endblock %}
        {% endembed %}

        {% if data.cart.idQuote is not empty %}
            {% embed molecule('cart-sidebar-item', 'CartPage') with {
                data: {
                    title: 'order_custom_reference.title' | trans,
                    cart: data.cart,
                    accordionItemClass: 'toggler-accordion__item',
                    accordionIconClass: 'toggler-accordion__icon',
                    ajaxTriggerAttribute: data.ajaxTriggerAttribute,
                },
            } only %}
                {% block titleAttributes %}
                    data-toggle-target='.{{ config.jsName }}__content-custom-order-reference-widget'
                {% endblock %}

                {% block contentClasses %}
                    {{ config.jsName }}__content-custom-order-reference-widget {{ parent() }}
                {% endblock %}

                {% block contentInner %}
                    {% widget 'OrderCustomReferenceWidget' args [
                        data.cart,
                        '/cart'
                   ] with {
                        data: {
                            ajaxTriggerAttribute: data.ajaxTriggerAttribute,
                        },
                    } only %}
                    {% endwidget %}
                {% endblock %}
            {% endembed %}
        {% endif %}
    {% endif %}

    {% if data.cart.orderCustomReference is defined and not data.isQuoteEditable %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'order_custom_reference.title' | trans,
                cart: data.cart,
                isAccordionItem: false,
            },
        } only %}
            {% block contentInner %}
                {% embed molecule('order-custom-reference', 'OrderCustomReferenceWidget') ignore missing with {
                    data: {
                        orderCustomReference: data.cart.orderCustomReference,
                    },
                } only %}
                    {% block title %}{% endblock %}
                {% endembed %}
            {% endblock %}
        {% endembed %}
    {% endif %}

    {% if data.cart.idQuote is not empty %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'comment_widget.comments_to_cart' | trans,
                cart: data.cart,
                isAccordionItem: false,
                ajaxTriggerAttribute: data.ajaxTriggerAttribute,
            },
        } only %}
            {% block contentInner %}
                {% widget 'CommentThreadWidget' args [
                    data.cart.idQuote,
                    'quote',
                    app.request.requestUri,
                    data.cart.commentThread
                ] with {
                    data: {
                        ajaxTriggerAttribute: data.ajaxTriggerAttribute,
                    },
                } only %}
                {% endwidget %}
            {% endblock %}
        {% endembed %}
    {% endif %}

    {% block cartSummaryItem %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                cart: data.cart,
                isQuoteValid: data.isQuoteValid,
                isQuoteEditable: data.isQuoteEditable,
                isAccordionItem: false,
                ajaxTriggerAttribute: data.ajaxTriggerAttribute,
            },
            modifiers: ['summary'],
            embed: {
                cartItemsCount: data.cartItemsCount,
            }
        } only %}
            {% block body %}
                <div class="{{ config.name }}__start">
                    <div class="{{ config.name }}__order-header grid grid--justify grid--middle">
                        <h6 class="{{ config.name }}__title col">{{ 'cart.your-order' | trans }}</h6>
                        <div class="{{ config.name }}__quantity col">{{ embed.cartItemsCount | executeFilterIfExists('formatInt', app.locale) }} {{ 'checkout.step.summary.items' | trans }}</div>
                    </div>

                    {% set isCartCodeFormWidget = data.isQuoteEditable and can('ChangeCartItemPermissionPlugin') and can('SeePricePermissionPlugin') %}

                    {% if isCartCodeFormWidget %}
                        {% widget 'CartCodeFormWidget' args [data.cart] with {
                            data: {
                                ajaxTriggerAttribute: data.ajaxTriggerAttribute,
                                redirectRoute: data.ajaxTriggerAttribute ? 'cart/async/view' : null,
                            },
                        } only %}
                        {% endwidget %}
                    {% endif %}
                </div>

                {% block cartSummary %}
                    {% if can('SeePricePermissionPlugin') %}
                        {% include molecule('cart-summary', 'CartPage') with {
                            data: {
                                cart: data.cart,
                                isQuoteValid: data.isQuoteValid,
                                isQuoteEditable: data.isQuoteEditable,
                                isAccordionItem: false,
                                ajaxTriggerAttribute: data.ajaxTriggerAttribute,
                                redirectRoute: data.ajaxTriggerAttribute ? 'cart/async/view' : null,
                            },
                        } only %}
                    {% endif %}
                {% endblock %}

                {% widget 'CancelOrderAmendmentWidget' args [data.cart] with {
                    data: {
                        buttonClass: 'button button--hollow button--expand spacing-top',
                    },
                } only %}
                {% endwidget %}
            {% endblock %}
        {% endembed %}
    {% endblock %}

    {% include molecule('toggler-accordion') with {
        attributes: {
            'wrap-class-name': config.jsName,
            'trigger-class-name': config.jsName ~ '-item__title',
        },
    } only %}
{% endblock %}
