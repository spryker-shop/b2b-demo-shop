{% extends molecule('order-detail-table', '@SprykerShop:CustomerPage') %}

{% block body %}
    {% for shipmentGroup in data.shipmentGroups %}
        <article class="grid grid--gap spacing-bottom spacing-bottom--big">
            <h3 class="col col--sm-12 col--xl-8 title title--second spacing-bottom spacing-bottom--small">
                {{ 'page.checkout.shipment.shipment_group_heading' | trans({
                    '%current%': loop.index,
                    '%total%': loop.length
                }) }}
            </h3>
            <div class="col col--sm-12 col--xl-8">

                {% for item in shipmentGroup.cartItems %}
                    {% set cartItem = item.bundleProduct ?? item %}
                    {% set isConfiguredBundle = cartItem.salesOrderConfiguredBundleItem is defined and cartItem.salesOrderConfiguredBundleItem is not empty %}

                    {% if not isConfiguredBundle %}
                        {% embed molecule('product-card-item') with {
                            modifiers: ['order-detail'],
                            data: {
                                listItem: cartItem,
                                quantity: cartItem.quantity,
                                priceModifiers: ['medium', 'block', 'margin-bottom-from-tablet'],
                            },
                            embed: {
                                order: data.order,
                                bundleItems: item.bundleItems | default([]),
                            },
                        } only %}
                            {% block image %}
                                {% embed molecule('product-item-image') with {
                                    modifiers: ['small'],
                                    data: {
                                        name: data.listItem.name,
                                        image: data.listItem.metadata.image,
                                    },
                                    embed: {
                                        order: embed.order,
                                        listItem: data.listItem,
                                    },
                                } only %}
                                    {% block body %}
                                        {% if embed.order is not empty %}
                                            <span class="{{ config.name }}__checkbox">
                                                {% widget 'CustomerReorderItemCheckboxWidget' args [embed.listItem] only %}{% endwidget %}
                                            </span>
                                        {% endif %}

                                        {{ parent() }}
                                    {% endblock %}
                                {% endembed %}
                            {% endblock %}

                            {% block title %}
                                <h6 class="{{ config.name }}__title spacing spacing--reset">{{ data.listItem.name }}</h6>
                            {% endblock %}

                            {% block productInfo %}
                                {% block quantityTitle %}
                                    {{ parent() }}
                                {% endblock %}

                                {% block packagingUnitCart %}
                                    {{ parent() }}
                                {% endblock %}

                                {% block salesInfo %}
                                    {{ parent() }}
                                {% endblock %}

                                {% block itemAttributes %}
                                    {{ parent() }}
                                {% endblock %}
                            {% endblock %}

                            {% block productDescriptionContent %}
                                {{ parent() }}

                                {% block bundle %}
                                    {% include molecule('bundle-items', 'ProductBundleWidget') ignore missing with {
                                        class: 'col col--sm-12',
                                        data: {
                                            items: embed.bundleItems,
                                        },
                                    } only %}
                                {% endblock %}

                                <div class="col col--sm-12">
                                    {{ block('productOptions') }}
                                </div>
                            {% endblock %}

                            {% block additionalInfo %}
                                {% block note %}
                                    {% if data.listItem.cartNote is not empty %}
                                        {% include molecule('cart-item-note', 'CartNoteWidget') ignore missing with {
                                            data: {
                                                isNoteNotEmpty: true,
                                                canWrite: false,
                                                label: 'cart_note.checkout_page.quote_note',
                                                note: data.listItem.cartNote,
                                            },
                                        } only %}
                                    {% endif %}
                                {% endblock %}
                            {% endblock %}

                            {% block packagingUnitCartContent %}
                                {% set hasSubQuantity = true %}
                                {% set hasAmountPerQuantity = true %}

                                {{ parent() }}
                            {% endblock %}

                            {% block subQuantity %}
                                {% if data.listItem.quantitySalesUnit is not empty %}
                                    {% include atom('quantity-option') with {
                                        data: {
                                            value: data.quantity,
                                            precision: data.listItem.quantitySalesUnit.conversion,
                                            optionName: data.listItem.quantitySalesUnit.productMeasurementUnit.name | trans,
                                        },
                                    } only %}
                                {% endif %}
                            {% endblock %}
                        {% endembed %}
                    {% endif %}
                {% endfor %}

                {% widget 'OrderItemsConfiguredBundleWidget' args [shipmentGroup.items] only %}
                {% endwidget %}
            </div>

            <div class="col col--sm-12 col--xl-4">
                {% embed molecule('summary-sidebar', 'CheckoutPage') ignore missing with {
                    data: {
                        shipmentGroup: shipmentGroup,
                        canEdit: false,
                        shipmentExpenses: data.orderShipmentExpenses,
                    },
                } only %}
                    {% block deliveryDate %}
                        {% if data.shipmentGroup.shipment.requestedDeliveryDate %}
                            {{ parent() }}
                        {% endif %}
                    {% endblock %}
                {% endembed %}
            </div>
        </article>
    {% endfor %}
{% endblock %}
