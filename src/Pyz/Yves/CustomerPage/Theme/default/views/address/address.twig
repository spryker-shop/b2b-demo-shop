{% extends template('page-layout-customer', 'CustomerPage') %}

{% define data = {
    addresses: _view.addresses,
    customerDeleteFormClone: _view.customerDeleteFormCloner,
    activePage: 'address',
    title: 'customer.account.address' | trans,
} %}

{% macro address(label, address, addressId, customerDeleteForm) %}
    {% if address is not empty %}
        {% embed molecule('action-card') with {
            data: {
                title: ('customer.account.default_' ~ label) | trans,
                address: address,
                actions: [
                    {
                        icon: 'edit',
                        url: url('customer/address/update', { id: addressId }),
                        title: 'customer.profile.address.edit' | trans,
                    },
                ],
            },
            embed: {
                addressId: addressId,
                customerDeleteForm: customerDeleteForm,
            },
        } only %}
            {% block actions %}
                {{ parent() }}

                {{ form_start(embed.customerDeleteForm, {
                    'action': path('customer/address/delete', {'id': embed.addressId}),
                    'attr': {
                        'class': 'col',
                    },
                }) }}
                    <button class="link link--alt link--action spacing-left" data-init-single-click>
                        {% include molecule('icon-tooltip') with {
                            modifiers: ['big'],
                            data: {
                                icon: 'delete',
                                text: 'customer.profile.address.delete' | trans,
                            },
                        } only %}
                    </button>
                {{ form_end(embed.customerDeleteForm) }}
            {% endblock %}

            {% block content %}
                {% include molecule('display-address') with {
                    data: {
                        address: data.address,
                    },
                } only %}
            {% endblock %}
        {% endembed %}
    {% endif %}
{% endmacro %}

{% block customerContent %}
    {% include molecule('action-bar') with {
        modifiers: ['first'],
        data: {
            title: 'customer.account.address' | trans,
            actions: [
                {
                    title: 'customer.account.button.add_new_address' | trans,
                    url: url('customer/address/new'),
                    modifiers: ['hollow'],
                },
            ],
        },
    } only %}

    {% set cards = [] %}

    {% for address in data.addresses %}
        {% set label = 'address' %}
        {% if address.isDefaultShipping and address.isDefaultBilling %}
            {% set label = 'both_addresses' %}
        {% elseif address.isDefaultShipping %}
            {% set label = 'shipping_address' %}
        {% elseif address.isDefaultBilling %}
            {% set label = 'billing_address' %}
        {% endif %}
        {% set cards = cards | merge([{ content: _self.address(label, address, address.idCustomerAddress, data.customerDeleteFormClone.getForm.createView) }]) %}
    {% endfor %}

    {% include molecule('action-card-grid') with {
        data: {
            cards: cards,
        },
    } only %}
{% endblock %}
