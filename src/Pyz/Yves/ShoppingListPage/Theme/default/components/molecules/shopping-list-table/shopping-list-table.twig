{% extends model('component') %}

{% define config = {
    name: 'shopping-list-table',
} %}

{% define data = {
    shoppingList: required,
    shoppingListItems: required,
    numberFormatConfig: {},
} %}

{% block body %}
    {% for item in data.shoppingListItems %}
        <input class="input" type="hidden"
               name="shoppingListItems[{{ item.idShoppingListItem }}]"
               value="{{ item.shoppingListItem.toArray | json_encode }}"
        >
        {% set isItemAvailable = item.available is defined and item.available and item.price is defined and item.price is not null %}
        {% set productDiscontinuedNoteWidget = findWidget('ProductDiscontinuedNoteWidget', [item.sku]) %}

        {% if productDiscontinuedNoteWidget %}
            {% set isItemAvailable = not productDiscontinuedNoteWidget.isDiscontinued and isItemAvailable %}
        {% endif %}

        {% embed molecule('product-card-item') with {
            modifiers: ['shopping-list', isItemAvailable ? 'shopping-list-available' : 'hidden'],
            data: {
                listItem: item,
                imageModifiers: ['shopping-list'],
                attributes: item.attributes | default([]),
                numberFormatConfig: data.numberFormatConfig,
            },
            embed: {
                isItemAvailable: isItemAvailable,
            },
        } only %}
            {% block image %}
                <div class="grid grid--justify grid--stretch {{ config.name }}__checkbox">
                    {% if embed.isItemAvailable %}
                        <div class="col {{ config.name }}__checkbox-col {{ config.name }}__checkbox-col--shopping-list">
                            {% include atom('checkbox') with {
                                modifiers: ['shopping-list'],
                                attributes: {
                                    name: 'shoppingListItem[idShoppingListItem][' ~ data.listItem.idShoppingListItem ~ ']',
                                    value: data.listItem.idShoppingListItem,
                                    disabled: not embed.isItemAvailable,
                                },
                            } only %}
                        </div>
                    {% endif %}
                    <div class="col col--expand">
                        {{ parent(data.listItem) }}
                    </div>
                </div>
            {% endblock %}

            {% block title %}
                <span class="{{ config.name }}__available">
                    {% if embed.isItemAvailable %}
                        {{ 'customer.account.shopping_list.available' | trans }}
                    {% else %}
                        {% widget 'ProductDiscontinuedWidget' args [data.listItem.sku] only %}
                        {% nowidget %}
                            {{ 'customer.account.shopping_list.not_available' | trans }}
                        {% endwidget %}
                    {% endif %}
                </span>
                {{ parent() }}
            {% endblock %}

            {% block productConfiguration %}
                {% widget 'ProductConfigurationShoppingListItemDisplayWidget' args [data.listItem.shoppingListItem] only %}{% endwidget %}
                {% widget 'ProductConfigurationShoppingListPageButtonWidget' args [data.listItem.shoppingListItem] only %}{% endwidget %}
            {% endblock %}

            {% block serviceInformation %}
            {% endblock %}

            {% block itemAttributes %}
                {% if data.attributes is not empty %}
                    {% include molecule('product-item-attributes') with {
                        class: 'spacing-y spacing-y--big text-small',
                        data: {
                            listItem: data.listItem,
                        },
                    } only %}
                    {% include molecule('shopping-list-item-product-option-display', 'ProductOptionWidget') with {
                        class: 'list list--expand',
                        data: {
                            options: data.listItem.shoppingListItem.productOptions,
                        },
                    } only %}
                {% endif %}
            {% endblock %}

            {% block price %}
                {% if data.listItem.price is not empty %}
                    {% include molecule('money-price') with {
                        modifiers: ['medium', 'block', 'margin-bottom-from-tablet', 'gray-color'],
                        data: {
                            amount: data.listItem.price,
                            originalAmount: data.listItem.prices.ORIGINAL is not defined or data.listItem.prices.ORIGINAL is empty ? null : data.listItem.prices.ORIGINAL,
                        },
                    } only %}
                {% else %}
                    {{ 'product_alternative_widget.not_applicable' | trans }}
                {% endif %}
            {% endblock %}

            {% block bundle %}
            {% endblock %}

            {% block note %}
                {% widget 'ShoppingListItemNoteWidget' args [data.listItem.shoppingListItem] only %}
                {% endwidget %}
            {% endblock %}

            {% block quantity %}
                {% include molecule('quantity-counter') with {
                    modifiers: ['shopping-list'],
                    data: {
                        isDisabled: not embed.isItemAvailable,
                        numberFormatConfig: data.numberFormatConfig,
                    },
                    attributes: {
                        name: 'shoppingListItem[quantity][' ~ data.listItem.idShoppingListItem ~ ']',
                        value: data.listItem.quantity,
                    },
                } only %}

            {% endblock %}

            {% block deleteButton %}
                {% if embed.isItemAvailable %}
                    <button type="submit" name="add-item" class="button button--hollow button--shopping-list" value="{{ data.listItem.idShoppingListItem }}" {{qa('submit-button')}}>
                        {{'customer.account.shopping_list.add-to-cart' | trans}}
                    </button>
                {% endif %}
            {% endblock %}
        {% endembed %}
        {% if can('WriteShoppingListPermissionPlugin', data.shoppingList.idShoppingList) %}
            {% widget 'ShoppingListProductAlternativeWidget' args [
                item,
                data.shoppingList
            ] only %}
            {% endwidget %}
        {% endif %}
    {% endfor %}
{% endblock %}
