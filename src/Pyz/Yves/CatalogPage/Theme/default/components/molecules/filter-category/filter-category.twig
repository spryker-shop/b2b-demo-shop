{% extends molecule('filter-category', '@SprykerShop:CatalogPage') %}

{% define config = {
    name: 'filter-category',
    tag: 'filter-category',
} %}

{% define data = {
    levelMenu: 1,
} %}

{% define attributes = {
    'wrapper-class-name': config.name ~ '__menu--lvl-1',
    'parent-class-name': config.name ~ '__menu-item--lvl-1',
    'active-category-class-name': 'js-' ~ config.name ~ '__menu-item',
    'visible-category-class': config.name ~ '__menu-item',
    'class-to-remove': 'is-hidden-lg-xxl',
} %}

{% block body %}
    <ul class="{{ config.name }}__menu {{ config.name }}__menu--lvl-{{ data.levelMenu }}">
        {% for categoryNode in data.categories %}
            {% set quantity = 0 %}
            {% set hasChildren = categoryNode.children is defined and categoryNode.children is not empty %}

            {% for filterValue in data.filter.values if (filterValue.value == categoryNode.nodeId) %}
                {% set quantity = filterValue.docCount %}
            {% endfor %}

            {% if (quantity > 0) or (quantity <= 0 and data.isEmptyCategoryFilterValueVisible == true) %}

                {% if data.filterPath is not empty %}
                    {% set currentUrl = url(data.filterPath, {categoryPath: (app.request.attributes.get('categoryPath'))}) %}
                {% else %}
                    {% set currentUrl = app.request.attributes.get('categoryNode') ? app.request.attributes.get('categoryNode').url : null %}
                {% endif %}

                {% set categoryUrl = data.filterPath is not empty ? url(data.filterPath, {categoryPath: (categoryNode.url | trimLocale)}) : categoryNode.url %}
                {% set isActive = (currentUrl == categoryUrl) %}
                {% set isHidden = (data.levelMenu != 1) %}
                {% set disableAttribute = quantity == 0 ? 'disabled' %}
                {% set menuItemActiveClass = isActive ? config.name ~ '__menu-item--active ' ~ config.jsName ~ '__menu-item' %}
                {% set menuItemHiddenClass = isHidden and not isActive ? 'is-hidden-lg-xxl' %}
                {% set menuLinkActiveClass = isActive ? config.name ~ '__menu-link--active' %}
                {% set linkTextActiveClass = isActive ? config.name ~ '__link-text--active' %}
                {% set triggerButtonJsName = data.parentJsName ? data.parentJsName ~ '__trigger' %}

                <li class="{{ config.name }}__menu-item {{ config.name }}__menu-item--lvl-{{ data.levelMenu }} {{ menuItemActiveClass }} {{ menuItemHiddenClass }}">
                    <button class="{{ config.name }}__menu-link {{ config.name }}__menu-link--lvl-{{ data.levelMenu }} {{ menuLinkActiveClass }} {{ triggerButtonJsName }}" type="button" {{ disableAttribute }} data-url={{ categoryUrl }}>
                        <span class="{{ config.name }}__link-text {{ linkTextActiveClass }}">{{ categoryNode.name }}</span> <span>{{ quantity }}</span>
                    </button>

                    {% if hasChildren %}
                        {% include molecule('filter-category', 'CatalogPage') with {
                            data: {
                                filter: data.filter,
                                filterPath: data.filterPath,
                                categories: categoryNode.children,
                                levelMenu: data.levelMenu + 1,
                                isEmptyCategoryFilterValueVisible: data.isEmptyCategoryFilterValueVisible,
                                parentJsName: data.parentJsName,
                            },
                        } only %}
                    {% endif %}
                </li>
            {% endif %}
        {% endfor %}
    </ul>
{% endblock %}
