{% extends molecule('sort', '@SprykerShop:CatalogPage') %}

{% block body %}
    <div class="grid grid--middle grid--justify">
        <div class="{{ config.name }}__col {{ config.name }}__col--counter col">
            {% widget 'SspAssetFilterNameWidget' args [_view.pagination.numFound] with {
                defaultCount: _view.pagination.numFound,
            } only %}
            {% nowidget %}
                {{ _view.pagination.numFound | default(0) | executeFilterIfExists('formatInt', app.locale) }} {{ 'catalog.itemsFound' | trans }}
            {% endwidget %}
        </div>

        <div class="col {{ config.name }}__col {{ config.name }}__col--filters is-hidden-sm-md">
            <div class="grid grid--middle {{ config.name }}__filter-grid {{ config.jsName }}__filter-grid" data-block-to="js-filter-section__sorting" data-breakpoint="768">
                <div class="{{ config.name }}__col {{ config.name }}__col--select col col--sm-6 col--lg-auto">
                    <div class="grid grid--middle">
                        <div class="{{ config.name }}__col col is-hidden-sm-md">
                            {{ 'catalog.filter.per' | trans }}:
                        </div>

                        <div class="{{ config.name }}__col col col col--sm-12 col--lg-auto">
                            {% embed molecule('custom-select') with {
                                modifiers: ['small', 'light', 'mobile-expand', 'different-mob-caret'],
                                attributes: {
                                    name: 'ipp',
                                    'config-theme': 'small',
                                },
                                embed: {
                                    pagination: _view.pagination,
                                    parentJsName: data.parentJsName,
                                },
                            } only %}
                                {% block selectClass %}
                                    {{ parent() }} {{ embed.parentJsName }}__sort-trigger
                                {% endblock %}
                                {% block options %}
                                    {% for limit in embed.pagination.config.validItemsPerPageOptions %}
                                        <option value="{{ limit }}" {% if limit == embed.pagination.currentItemsPerPage %}selected{% endif %}>{{ limit | executeFilterIfExists('formatInt', app.locale) }}</option>
                                    {% endfor %}
                                {% endblock %}
                                {% block caret %}
                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-sm-md',
                                        data: {
                                            name: 'caret-down',
                                        },
                                    } only %}

                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-lg-xxl',
                                        data: {
                                            name: 'double-chevrons',
                                        },
                                    } only %}
                                {% endblock %}
                            {% endembed %}
                        </div>
                    </div>
                </div>
                <div class="{{ config.name }}__col {{ config.name }}__col--select col col--sm-6 col--lg-auto">
                    <div class="grid grid--middle">
                        <div class="{{ config.name }}__col col is-hidden-sm-md">
                            {{ 'catalog.filter.sort' | trans }}:
                        </div>

                        <div class="{{ config.name }}__col col col col--sm-12 col--lg-auto">
                            {% embed molecule('custom-select') with {
                                modifiers: ['small', 'light', 'mobile-expand', 'different-mob-caret'],
                                attributes: {
                                    name: 'sort',
                                    'config-theme': 'small',
                                },
                                embed: {
                                    sort: _view.sort,
                                    parentJsName: data.parentJsName,
                                },
                            } only %}
                                {% block selectClass %}
                                    {{ parent() }} {{ embed.parentJsName }}__sort-trigger
                                {% endblock %}
                                {% block options %}
                                    <option value="">{{ 'catalog.sort.relevance' | trans }}</option>
                                    {% for sortParamName in embed.sort.sortParamNames %}
                                        <option value="{{ sortParamName }}" {% if sortParamName == embed.sort.currentSortParam %}selected{% endif %}>{{ ('catalog.sort.' ~ sortParamName) | trans }}</option>
                                    {% endfor %}
                                {% endblock %}
                                {% block caret %}
                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-sm-md',
                                        data: {
                                            name: 'caret-down',
                                        },
                                    } only %}

                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-lg-xxl',
                                        data: {
                                            name: 'double-chevrons',
                                        },
                                    } only %}
                                {% endblock %}
                            {% endembed %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {% include molecule('breakpoint-dependent-block-placer') with {
        attributes: {
            'block-class-name': config.jsName ~ '__filter-grid',
        },
    } only %}
{% endblock %}
