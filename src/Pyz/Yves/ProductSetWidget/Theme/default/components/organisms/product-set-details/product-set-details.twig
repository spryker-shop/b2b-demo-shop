{% extends organism('product-set-details', '@SprykerShop:ProductSetWidget') %}

{% define data = {
    title: '',
    addAllSetButton: can('SeeAddToCartPermissionPlugin') | default(false),
    sliderConfig: '{
        "slidesToShow": 4,
        "slidesToScroll": 1,
        "dots": false,
        "infinite": false,
        "responsive": [{
            "breakpoint": 768,
            "settings": {
                "slidesToShow": 2
                }
        },
        {
            "breakpoint": 375,
            "settings": {
                "slidesToShow": 1
            }
        }]
    }',
} %}

{% block body %}
    {% set productSetAddToCartButtonClass = 'button--expand-sm-only spacing-bottom spacing-bottom--biggest' %}

    {% block banner %}
        {% embed molecule('banner') with {
            class: config.name ~ '__banner',
            data: {
                imageUrl: data.images.0.externalUrlLarge | default,
                title: data.title,
            },
        } only %}
            {% block content %}
                <h1 class="title title--light title--product-set-details">{{ data.title }}</h1>
                <p class="{{ config.name }}__text {{ config.name }}__text--subtitle">
                    {{- 'product.set' | trans -}}
                </p>
            {% endblock %}

            {% block body %}
                {% set containerClass = config.name ~ '__container grid grid--column grid--middle grid--center' %}
                {% set contentClass = contentClass ~ ' text-center' %}

                {{ parent() }}
            {% endblock %}
        {% endembed %}
    {% endblock %}

    {% block header %}
        {% widget 'AddItemsFormWidget' args [config, data, data.products] with {
            embed: {
                productSetAddToCartButtonClass: productSetAddToCartButtonClass,
            },
        } only %}
            {% block embeddedData %}
                {% embed organism('section') with {
                    modifiers: ['secondary'],
                    class: 'text-center',
                    data: {
                        title: 'product.sets.widget.title' | trans,
                    },
                    embed: {
                        description: data.data.description,
                        addAllSetButton: data.data.addAllSetButton,
                        products: data.products,
                        jsName: data.config.jsName,
                        productSetAddToCartButtonClass: embed.productSetAddToCartButtonClass,
                    },
                } only %}
                    {% block inner %}
                        <div class="{{ config.name }}__text">
                            {% block description %}
                                {% if embed.description %}
                                    <p>{{ embed.description }}</p>
                                {% endif %}
                            {% endblock %}
                        </div>

                        {% if embed.addAllSetButton and embed.products | length %}
                            {% set isDisabled = false %}

                            {% for product in embed.products %}
                                {% if product.idProductConcrete is not empty and product.available %}
                                    <input type="hidden" class="{{ embed.jsName }}__product-sku-hidden-input" name="items[{{ loop.index }}][sku]" value="{{ product.sku }}">
                                    <input type="hidden" name="items[{{ loop.index }}][quantity]" value="1">
                                {% endif %}

                                {% if product.idProductConcrete is empty %}
                                    {% set isDisabled = true %}
                                {% endif %}
                            {% endfor %}

                            <button class="button {{ embed.productSetAddToCartButtonClass }}" {{ isDisabled ? 'disabled' : 'data-init-single-click' }}>
                                {{ 'product.set.detail.add_all_to' | trans }}
                                {% include atom('icon') with {
                                    class: 'spacing-y spacing-y--reset',
                                    modifiers: ['cart'],
                                    data: {
                                        name: 'cart',
                                    },
                                } only %}
                            </button>
                        {% endif %}
                    {% endblock %}
                {% endembed %}
            {% endblock %}
        {% endwidget %}
    {% endblock %}

    {% block productSet %}
        {% if data.products | length %}
            <form method="GET">
                {% embed molecule('slick-carousel') with {
                    modifiers: ['product-set', 'equal-height'],
                    data: {
                        slides: data.products,
                    },
                    attributes: {
                        'slider-config': data.sliderConfig,
                        'custom-select-class-name': 'custom-select',
                    },
                    embed: {
                        jsName: config.jsName,
                    },
                } only %}
                    {% block slides %}
                        {% for product in data.slides %}
                            {% embed molecule('product-item') with {
                                class: embed.jsName ~ '__product-item',
                                modifiers: ['catalog', 'sets', 'stretch'],
                                data: {
                                    product: product,
                                },
                            } only %}
                                {% block actionsContainer %}
                                    <div class="{{ config.name }}__variant">
                                        {% set isNotAvailable = data.product.idProductConcrete and not data.product.available %}

                                        {% embed molecule('variant-configurator', 'ProductDetailPage') ignore missing with {
                                            data: {
                                                superAttributes: data.product.attributeMap.superAttributes,
                                                selectedAttributes: data.product.selectedAttributes,
                                                availableAttributes: data.product.availableAttributes,
                                                useExternalForm: true,
                                            },
                                            embed: {
                                                product: data.product,
                                            },
                                        } only %}
                                            {% block variant %}
                                                {% if can('SeeAddToCartPermissionPlugin') %}
                                                    {% include molecule('variant', 'ProductDetailPage') ignore missing with {
                                                        modifiers: ['product-set'],
                                                        data: {
                                                            name: name,
                                                            formName: 'attributes[' ~ embed.product.idProductAbstract ~ '][' ~ name ~ ']',
                                                            values: values,
                                                            selectedValue: selectedValue,
                                                            label: ('product.attribute.' ~ name) | trans,
                                                            isAvailable: isAvailable,
                                                            selectModifiers: ['small'],
                                                            selectTheme: 'small',
                                                            selectPlaceholder: 'global.select.placeholder.value',
                                                        },
                                                    } only %}
                                                {% endif %}
                                            {% endblock %}
                                        {% endembed %}

                                        {% if isNotAvailable %}
                                            <p>
                                                <strong>{{ 'product.detail.out_of_stock' | trans }}</strong>
                                            </p>
                                        {% endif %}
                                    </div>

                                    {% if can('SeeAddToCartPermissionPlugin') %}
                                        {% set isDisabled = not data.product.idProductConcrete or not data.product.available or not can('ROLE_USER') %}

                                        <div class="{{ config.name }}__actions {{ config.name }}__actions--sticky-bottom">
                                            {% if isDisabled %}
                                                <button type="button" class="button button--expand" disabled>{{ 'page.detail.add-to-cart' | trans }}</button>
                                            {% else %}
                                                {% widget 'AddToCartFormWidget' args [config, data.product, isDisabled] only %}
                                                    {% block body %}
                                                        {% set productSku = data.product.sku %}
                                                        {% set formAction = path('cart/add', {'sku': productSku}) %}
                                                        {% set tokenField = data.form._token.vars %}

                                                        {% include molecule('remote-form-submit') with {
                                                            data: {
                                                                label: 'page.detail.add-to-cart' | trans,
                                                                buttonClass: 'button button--expand ' ~ data.config.jsName ~ '__button-add-to-cart',
                                                                buttonExtraAttributes: {
                                                                    'data-form-action': formAction,
                                                                    'data-init-single-click': true,
                                                                    'data-qa': 'add-to-cart-button',
                                                                },
                                                            },
                                                            attributes: {
                                                                'form-name': 'addToCartForm_' ~ productSku,
                                                                'form-action': formAction,
                                                                'field-name': tokenField.full_name,
                                                                'field-value': tokenField.value,
                                                            },
                                                        } only %}
                                                    {% endblock %}
                                                {% endwidget %}
                                            {% endif %}
                                        </div>
                                    {% endif %}
                                {% endblock %}
                            {% endembed %}
                        {% endfor %}
                    {% endblock %}
                {% endembed %}
            </form>
        {% endif %}

        {% if not data.products | length %}
            <div class="{{ config.name }}__text text-center">
                <p> {{ 'product.set.detail.no-products' | trans }} </p>
            </div>
        {% endif %}
    {% endblock %}
{% endblock %}
