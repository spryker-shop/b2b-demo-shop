{% extends model('component') %}

{% define config = {
    name: 'product-set-cms',
} %}

{% define data = {
    products: required,
    title: '',
    description: '',
    images: [],
    sliderConfig: '{
        "slidesToShow": 2,
        "slidesToScroll": 1,
        "dots": false,
        "infinite": true,
        "loop": true,
        "variableWidth": true,
        "responsive": [{
            "breakpoint": 768,
            "settings": {
                "slidesToShow": 2
            }
        },
        {
            "breakpoint": 375,
            "settings": {
                "slidesToShow": 1
            }
        }]
    }'
} %}

{% block body %}
    {% block header %}
        {% embed organism('section') with {
            modifiers: ['secondary'],
            class: 'spacing-bottom spacing-bottom--reset',
            data: {
                title: data.title,
            },
            embed: {
                description: data.description,
            },
        } only %}
            {% block inner %}
                <div class="{{ config.name }}__text">
                    {% if embed.description %}
                        {{ embed.description }}
                    {% endif %}
                </div>
            {% endblock %}
        {% endembed %}
    {% endblock %}
    <div class="grid grid--gap grid--center">
        <div class="{{ config.name ~ "__container" }} col col--sm-12 col--md-6 col--lg-5">
            {% block banner %}
                {% embed molecule('banner') with {
                    modifiers: ['medium', 'spacing-bottom-reset'],
                    data: {
                        imageUrl: data.images.0.externalUrlLarge | default,
                    },
                } only %}
                    {% block body %}
                        {% set containerClass = config.name ~ '__container ' ~ config.name ~ '__container--spacing-x-reset' %}

                        {{ parent() }}
                    {% endblock %}
                {% endembed %}
            {% endblock %}
        </div>
        <div class="col col--sm-12 col--md-6 col--lg-7">
            {% block productSet %}
                {% if data.products | length %}
                    <form method="GET">
                        {% embed molecule('slick-carousel') with {
                            modifiers: ['equal-height', 'product-set-widget'],
                            data: {
                                slides: data.products,
                            },
                            attributes: {
                                'slider-config': data.sliderConfig,
                                'custom-select-class-name': 'custom-select',
                            },
                        } only %}
                            {% block slides %}
                                {% for product in data.slides %}
                                    {% embed molecule('product-item') with {
                                        class: 'spacing-bottom spacing-bottom--inner spacing-bottom--reset',
                                        modifiers: ['catalog', 'stretch', 'product-set'],
                                        data: {
                                            product: product,
                                        },
                                    } only %}
                                        {% block actionsContainer %}
                                            <div class="{{ config.name }}__variant">
                                                {% set isNotAvailable = data.product.idProductConcrete and not data.product.available %}

                                                {% embed molecule('variant-configurator', 'ProductDetailPage') ignore missing with {
                                                    data: {
                                                        superAttributes: data.product.attributeMap.superAttributes,
                                                        selectedAttributes: data.product.selectedAttributes,
                                                        availableAttributes: data.product.availableAttributes,
                                                        useExternalForm: true,
                                                    },
                                                    embed: {
                                                        idProductAbstract: data.idProductAbstract,
                                                    },
                                                } only %}
                                                    {% block variant %}
                                                        {% if can('SeeAddToCartPermissionPlugin') %}
                                                            {% include molecule('variant', 'ProductDetailPage') ignore missing with {
                                                                modifiers: ['product-set'],
                                                                data: {
                                                                    name: name,
                                                                    formName: 'attributes[' ~ embed.idProductAbstract ~ '][' ~ name ~ ']',
                                                                    values: values,
                                                                    selectedValue: selectedValue,
                                                                    label: ('product.attribute.' ~ name) | trans,
                                                                    isAvailable: isAvailable,
                                                                    selectModifiers: ['small'],
                                                                    selectTheme: 'small',
                                                                    selectPlaceholder: 'global.select.placeholder.value',
                                                                },
                                                            } only %}
                                                        {% endif %}
                                                    {% endblock %}
                                                {% endembed %}

                                                {% if isNotAvailable %}
                                                    <p>
                                                        <strong>{{ 'product.detail.out_of_stock' | trans }}</strong>
                                                    </p>
                                                {% endif %}
                                            </div>

                                            {% if can('SeeAddToCartPermissionPlugin') %}
                                                {% set isDisabled = not data.product.idProductConcrete or not data.product.available or not can('ROLE_USER') %}

                                                <div class="{{ config.name }}__actions">
                                                    {% if isDisabled %}
                                                        <button type="button" class="button button--expand" disabled>{{ 'page.detail.add-to-cart' | trans }}</button>
                                                    {% else %}
                                                        {% widget 'AddToCartFormWidget' args [config, data.product, isDisabled] only %}
                                                            {% block body %}
                                                                {% set productSku = data.product.sku %}
                                                                {% set formAction = path('cart/add', {'sku': productSku}) %}
                                                                {% set tokenField = data.form._token.vars %}

                                                                {% include molecule('remote-form-submit') with {
                                                                    data: {
                                                                        label: 'page.detail.add-to-cart' | trans,
                                                                        buttonClass: 'button button--expand ' ~ data.config.jsName ~ '__button-add-to-cart',
                                                                        buttonExtraAttributes: {
                                                                            'data-form-action': formAction,
                                                                            'data-init-single-click': true,
                                                                            'data-qa': 'add-to-cart-button',
                                                                        },
                                                                    },
                                                                    attributes: {
                                                                        'form-name': 'addToCartForm_' ~ productSku,
                                                                        'form-action': formAction,
                                                                        'field-name': tokenField.full_name,
                                                                        'field-value': tokenField.value,
                                                                    },
                                                                } only %}
                                                            {% endblock %}
                                                        {% endwidget %}
                                                    {% endif %}
                                                </div>
                                            {% endif %}
                                        {% endblock %}
                                    {% endembed %}
                                {% endfor %}
                            {% endblock %}
                        {% endembed %}
                    </form>
                {% endif %}
            {% endblock %}
        </div>
    </div>
{% endblock %}
