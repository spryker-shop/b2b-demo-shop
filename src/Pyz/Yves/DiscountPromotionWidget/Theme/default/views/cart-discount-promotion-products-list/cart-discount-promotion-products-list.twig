{% extends view('cart-discount-promotion-products-list', '@SprykerShop:DiscountPromotionWidget') %}

{% block body %}
    {% set titleClassName = 'title title--product-slider title--top-margin-small' %}
    {% set promotionItemClassName = 'spacing-bottom spacing-bottom--biggest' %}
    {% set promotionItemTitleClassName = 'title--h4 spacing-bottom spacing-bottom--biggest' %}
    {{ parent() }}
{% endblock %}

{% block promotionProductSlider %}
    {% embed molecule('slick-carousel') with {
        modifiers: ['full-width', 'equal-height', 'products', 'full-height'],
        data: {
            slides: data.abstractSkusGroupedByIdDiscount[discount.idDiscount],
        },
        embed: {
            promotionProducts: data.promotionProducts,
            idDiscountPromotion: discount.discountPromotion.idDiscountPromotion,
            ajaxTriggerAttribute: data.ajaxTriggerAttribute,
        },
        attributes: {
            'slider-config': '{
                "slidesToShow": 3,
                "slidesToScroll": 1,
                "dots": false,
                "infinite": false,
                "responsive": [{
                     "breakpoint": 1024,
                     "settings": {
                         "slidesToShow": 3
                     }
                },
                {
                     "breakpoint": 768,
                     "settings": {
                         "slidesToShow": 2,
                         "infinite": true
                     }
                },
                {
                     "breakpoint": 550,
                     "settings": {
                         "slidesToShow": 1,
                         "infinite": true
                     }
                }]
            }'
        }
    } only %}
        {% block slides %}
            {% for slide in data.slides %}
                {% embed molecule('product-item') with {
                    modifiers: ['catalog', 'stretch'],
                    data: {
                        product: embed.promotionProducts[slide ~ "-" ~ embed.idDiscountPromotion],
                    },
                    embed: {
                        ajaxTriggerAttribute: embed.ajaxTriggerAttribute,
                    },
                } only %}
                    {% block colors %}{% endblock %}

                    {% block content %}
                        {% import _self as component %}
                        <div class="{{ config.name }}__info">
                            {{ parent() }}

                            <div class="{{ config.name }}__variant">
                                {% include molecule('variant-configurator', 'DiscountPromotionWidget') with {
                                    data: {
                                        sku: data.sku,
                                        superAttributes: data.product.attributeMap.superAttributes,
                                        selectedAttributes: data.product.selectedAttributes,
                                        availableAttributes: data.product.availableAttributes,
                                        ajaxTriggerAttribute: embed.ajaxTriggerAttribute,
                                        formAction: embed.ajaxTriggerAttribute ? path('cart/async/view'),
                                    },
                                } only %}
                            </div>

                            <div class="{{ component.renderClass(config.name ~ '__actions', modifiers) }}">
                                {% set isDisabled = not data.product.idProductConcrete or not data.product.available %}

                                {% widget 'AddToCartFormWidget' args [config, data.product, isDisabled] with {
                                    data: {
                                        isAsyncMode: embed.ajaxTriggerAttribute,
                                    },
                                    embed: {
                                        ajaxTriggerAttribute: embed.ajaxTriggerAttribute,
                                    },
                                } only %}
                                    {% block embeddedData %}
                                        {% set disabledAttribute = data.isDisabled ? 'disabled' %}

                                        <div class="grid grid--bottom grid--justify">
                                            <div class="col col--sm-12 spacing-bottom spacing-bottom--big">
                                                {% include molecule('quantity-counter') with {
                                                    attributes: {
                                                        max: data.product.promotionItem.maxQuantity,
                                                    },
                                                } only %}
                                            </div>

                                            <div class="col col--sm-12">
                                                <input type="hidden" value="{{ productSku }}" name="groupKey">
                                                <input type="hidden" value="{{ data.product.promotionItem.discount.discountPromotion.idDiscountPromotion }}" name="idDiscountPromotion">

                                                <button {{ embed.ajaxTriggerAttribute }} class="button button--expand" {{ disabledAttribute }} data-init-single-click>
                                                    {{ 'page.detail.add-to-cart' | trans }}
                                                </button>
                                            </div>
                                        </div>
                                    {% endblock %}
                                {% endwidget %}
                            </div>
                        </div>
                    {% endblock %}

                    {% block action %}{% endblock %}
                {% endembed %}
            {% endfor %}
        {% endblock %}
    {% endembed %}
{% endblock %}
