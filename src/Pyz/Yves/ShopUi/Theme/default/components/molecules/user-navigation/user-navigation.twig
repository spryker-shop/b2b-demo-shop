{% extends model('component') %}

{% define config = {
    name: 'user-navigation',
    tag: 'ul',
} %}

{% define data = {
    user: required,
} %}

{% set cartQuantityText = cartQuantity > 0 ? cartQuantity ~ ' ' %}
{% set shouldShowMiniCart = findWidget('MiniCartWidget', [cartQuantityText]).isMultiCartAllowed %}

{%- block class -%}
    {{ parent() }} {{ config.jsName }}
{%- endblock -%}

{% block body %}
    <li class="{{ config.name }}__item {{ config.name }}__item--user">
        <div class="{{ config.name }}__user-name">
            <span class="{{ config.name }}__icon">
                {% include atom('icon') with {
                    modifiers: ['user'],
                    data: {
                        name: 'user',
                    },
                } only %}
                {% include atom('icon') with {
                    class: config.name ~ '__arrow',
                    data: {
                        name: 'caret-down',
                    },
                } only %}
            </span>
            <span class="{{ config.name }}__text">{% widget 'CustomerFullNameWidget' only %}{% endwidget %}</span>
        </div>
        {% include molecule('navigation-list') with {
            modifiers: ['secondary'],
            class: config.name ~ '__sub-nav',
            data: {
                nodes: [{
                    url: url('customer/overview'),
                    title: 'customer.account.overview' | trans,
                },
                {
                    url: url('customer/profile'),
                    title: 'customer.account.profile_data' | trans,
                },
                {
                    url: url('customer/address'),
                    title: 'customer.account.address' | trans,
                },
                {
                    url: url('customer/order'),
                    title: 'customer.account.order_history' | trans,
                },
                {
                    url: url('return/list'),
                    title: 'return_page.default_title' | trans,
                },
                {
                    url: url('customer/newsletter'),
                    title: 'customer.account.newsletter' | trans,
                },
                {
                    url: url('quote-request'),
                    title: 'quote_request_widget.request_for_quote.list.title' | trans,
                },
                {
                    url: url('logout'),
                    title: 'customer.logout' | trans,
                    additionalClass: 'link--additional',
                },
            ]},
        } only %}
    </li>
    <li class="{{ config.name }}__item">
        <a class="{{ config.name }}__link" href="{{ url('quick-order') }}">
            <span class="{{ config.name }}__icon">
                {% include atom('icon') with {
                    modifiers: ['quick-order'],
                    data: {
                        name: 'quick-order',
                    },
                } only %}
            </span>
            <span class="{{ config.name }}__text">{{ 'quick-order.page-title'|trans }}</span>
        </a>
    </li>

    {% widget 'ShoppingListNavigationMenuWidget' with {config: config} only %}
        {% block body %}
            <li class="{{ config.name }}__item">
                <a class="{{ config.name }}__link {{ config.jsName }}__trigger" href="{{ url('shopping-list') }}" data-toggle-target='.{{ config.jsName }}__sub-nav-shopping-list'>
                    <span class="{{ config.name }}__icon">
                    {% include atom('icon') with {
                        modifiers: ['header-shopping-list'],
                        data: {
                            name: 'shopping-list',
                        },
                    } only %}
                    </span>
                    <span class="{{ config.name }}__text">{{ 'customer.account.shopping_list'|trans }}</span>
                </a>
                <div class="{{ config.name }}__sub-nav {{ config.name }}__sub-nav--pull-left spacing spacing--inner spacing--reset {{ config.jsName }}__sub-nav-shopping-list">
                    <button class="{{config.name}}__sub-nav-close {{ config.jsName }}__trigger" data-toggle-target='.{{ config.jsName }}__sub-nav-shopping-list'>
                        {% include atom('icon') with {
                            data: {
                                name: 'cross',
                            },
                        } only %}
                    </button>
                    <h4 class="{{ config.name }}__sub-nav-title">
                        {{ 'shopping_list.shopping_list'|trans }}
                    </h4>
                    {% block listItems %}
                        <div class="{{ config.name }}__sub-nav-inner">
                            {{ parent() }}
                        </div>
                    {% endblock %}
                    {% block listActions %}
                        <div class="{{ config.name }}__sub-nav-actions">
                            {{ parent() }}
                        </div>
                    {% endblock %}
                </div>
            </li>
        {% endblock %}
    {% endwidget %}

    <li class="{{ config.name }}__item">
        {% if not shouldShowMiniCart %}
            <a class="{{ config.name }}__link" href="{{ url('cart') }}">
                <span class="{{ config.name }}__empty-cart">
                    {% include atom('icon') with {
                        modifiers: ['cart'],
                        data: {
                            name: 'cart',
                        },
                    } only %}
                </span>

                <span>{{ 'global.my-cart' | trans }}</span>
            </a>
        {% else %}
            {% embed molecule('cart-counter') with {
                class: config.jsName ~ '__trigger',
                data: {
                    quantity: cartQuantity,
                },
                attributes: {
                    'data-toggle-target': '.' ~ config.jsName ~ '__sub-nav-cart',
                },
                embed: {
                    parentConfigName: config.name,
                },
            } only %}
                {% block content %}
                    {% set linkClass = embed.parentConfigName ~ '__link' %}
                    {{ parent() }}
                {% endblock %}
            {% endembed %}
            <div class="{{ config.name }}__sub-nav {{ config.name }}__sub-nav--pull-left spacing spacing--inner spacing--reset {{ config.jsName }}__sub-nav-cart">
                {% widget 'MiniCartWidget' args [cartQuantityText] with {config: config} only %}
                    {% block body %}
                        <button class="{{config.name}}__sub-nav-close {{ config.jsName }}__trigger" data-toggle-target='.{{ config.jsName }}__sub-nav-cart'>
                            {% include atom('icon') with {
                                data: {
                                    name: 'cross',
                                },
                            } only %}
                        </button>
                        <h4 class="{{ config.name }}__sub-nav-title">
                            {{ 'multi_cart_widget.cart.carts'|trans }}
                        </h4>
                        {% block cartItems %}
                            <div class="{{ config.name }}__sub-nav-inner">
                                {{ parent() }}
                            </div>
                        {% endblock %}

                        {% block cartActions %}
                            <div class="{{ config.name }}__sub-nav-actions">
                                {{ parent() }}
                            </div>
                        {% endblock %}
                    {% endblock %}
                {% endwidget %}
            </div>
        {% endif %}
    </li>

    {% include molecule('toggler-accordion') with {
        attributes: {
            'wrap-class-name': config.jsName,
            'trigger-class-name': config.jsName ~ '__trigger',
            'class-to-toggle': config.name ~ '__sub-nav--touch-active',
            'active-on-touch': 'true',
        },
    } only %}

{% endblock %}
