/* stylelint-disable */

@mixin basic-grid() {
    .container {
        display: block;
        width: 100%;
        max-width: $setting-grid-max-width;
        margin: auto;
        padding: 0 $setting-grid-space;

        &--medium {
            max-width: rem(1000);
        }

        &--small {
            max-width: rem(800);
        }

        &--expand {
            max-width: 100%;
        }
    }

    .col {
        @include helper-ui-clearfix;
        float: left;
        display: block;
        flex-grow: 0;
        flex-basis: auto;

        @each $breakpoint, $edges in $setting-breakpoints {
            @include helper-breakpoint-media-min(helper-breakpoint-edge-min($edges)) {
                @for $column from 1 through $setting-grid-columns {
                    &--#{$breakpoint}-#{$column} {
                        width: helper-grid-span($column);
                        min-width: helper-grid-span($column);
                    }
                }

                &--#{$breakpoint}-auto {
                    width: auto;
                    min-width: 0;
                }
            }
        }

        &--expand {
            flex-grow: 1;
        }

        &--no-shrink {
            flex-shrink: 0;
        }

        &--mobile-expand {
            flex-grow: 1;

            @include helper-breakpoint-media-min($lg) {
                flex-grow: 0;
            }
        }

        &--top {
            align-self: flex-start;
            margin-bottom: auto;
        }

        &--bottom {
            align-self: flex-end;
            margin-top: auto;
        }

        &--left {
            justify-self: flex-start;
            margin-right: auto;
        }

        &--right {
            justify-self: flex-end;
            margin-left: auto;
        }

        &--center {
            justify-self: center;
            margin-left: auto;
            margin-right: auto;
        }

        &--middle {
            align-self: center;
            margin-top: auto;
            margin-bottom: auto;
        }

        &--equal {
            flex-grow: 1;
            flex-basis: 0;
        }

        &--bottom-indent {
            padding-bottom: $setting-grid-space-mobile;

            @include helper-breakpoint-media-min($lg) {
                padding-bottom: $setting-grid-space;
            }
        }
    }

    .grid {
        @include helper-ui-clearfix;
        clear: both;
        display: flex;
        flex-flow: row wrap;
        align-items: flex-start;
        justify-content: flex-start;

        &--wide {
            width: 100%;
        }

        &--baseline {
            align-items: baseline;
        }

        &--top {
            align-items: flex-start;
        }

        &--bottom {
            align-items: flex-end;
        }

        &--left {
            justify-content: flex-start;
        }

        &--right {
            justify-content: flex-end;
        }

        &--center {
            justify-content: center;
        }

        &--middle {
            align-items: center;
        }

        &--stretch {
            align-items: stretch;

            & > .col {
                margin-top: 0;
                margin-bottom: 0;
            }
        }

        &--with-gutter,
        &--gap {
            margin-left: -$setting-grid-space-mobile;
            margin-right: -$setting-grid-space-mobile;
            width: calc(100% + #{$setting-grid-space-mobile * 2});

            @include helper-breakpoint-media-min($lg) {
                margin-left: -$setting-grid-space;
                margin-right: -$setting-grid-space;
                width: calc(100% + #{$setting-grid-space * 2});
            }

            & > .col {
                padding-left: $setting-grid-space-mobile;
                padding-right: $setting-grid-space-mobile;

                @include helper-breakpoint-media-min($lg) {
                    padding-left: $setting-grid-space;
                    padding-right: $setting-grid-space;
                }
            }
        }

        &--gap-smaller {
            margin-left: rem(-5);
            margin-right: rem(-5);
            width: calc(100% + #{rem(10)});

            & > .col {
                padding-left: rem(5);
                padding-right: rem(5);
            }
        }

        &--justify-column {
            justify-content: space-between;

            & > .col {
                margin-top: auto;
                margin-bottom: auto;

                &:first-child {
                    margin-top: 0;
                }

                &:last-of-type {
                    margin-bottom: 0;
                }
            }
        }

        &--justify {
            justify-content: space-between;

            & > .col {
                margin-left: auto;
                margin-right: auto;

                &:first-child {
                    margin-left: 0;
                }

                &:last-child {
                    margin-right: 0;
                }
            }
        }

        &--nowrap {
            flex-wrap: nowrap;
        }

        &--nowrap-lg-only {
            @include helper-breakpoint-media-min($lg) {
                flex-wrap: nowrap;
            }
        }

        &--column {
            flex-direction: column;
        }

        &--column-mob-reverse {
            flex-direction: column-reverse;

            @include helper-breakpoint-media-min($lg) {
                flex-direction: column;
            }
        }

        &--inline {
            display: inline-flex;
        }

        &--expand {
            width: 100%;
        }

        &.container {
            max-width: $setting-grid-max-width;
        }

        &--row-tablet {
            @include helper-breakpoint-media-min($md) {
                flex-direction: row;
            }
        }
    }
}
