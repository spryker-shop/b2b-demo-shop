{% extends molecule('product-configurator', '@SprykerShop:ProductDetailPage') %}

{% set isProductConcrete = data.product.idProductConcrete is not empty %}

{% block body %}
    <div class="{{ config.name }}__top-block">
        {% widget 'ProductDetailPageReviewWidget' args [data.product.idProductAbstract] use view('pdp-review-rating', 'ProductReviewWidget') only %}{% endwidget %}
        <div class="{{ config.name }}__brand-sku-wrapper">
            {% if brand is not empty %}
                <div itemprop="brand" class="{{ config.name }}__brand-name">{{ brand }}</div>
            {% endif %}
            <div class="{{ config.name }}__sku">{{ 'product.attribute.sku' | trans }}: <span itemprop="sku">{{ sku }}</span></div>
        </div>
    </div>

    {% if can('SeePricePermissionPlugin') %}
        {% set sspServiceDetectorWidget = findWidget('SspServiceDetectorWidget', [data.product]) %}
        {% if (sspServiceDetectorWidget and sspServiceDetectorWidget.isService) %}
            {% widget 'SspProductOfferPriceWidget' args [data.product] only %}{% endwidget %}
        {% else %}
            {% widget 'CurrentProductPriceVolumeWidget' args [data.product.currentProductPrice] only %}
            {% elsewidget 'ProductPriceVolumeWidget' args [data.product] only %} {# @deprecated Use CurrentProductPriceVolumeWidget instead. #}
            {% nowidget %}
                {% include molecule('money-price') with {
                    modifiers: ['big'],
                    data: {
                        amount: data.product.price,
                        originalAmount: data.product.prices.ORIGINAL ?? null,
                    },
                } only %}
            {% endwidget %}
        {% endif %}
    {% endif %}

    {% block bundleProducts %}
        {% widget 'ProductBundleProductDetailPageItemsListWidget' args [data.product] only %}{% endwidget %}
    {% endblock %}

    {% block colors %}
        {% widget 'ProductGroupColorWidget' args [data.product.idProductAbstract, data.product.selectedAttributes ?? []] use view('product-detail-color-selector', 'ProductGroupWidget') only %}{% endwidget %}
    {% endblock %}

    {% include molecule('variant-configurator', 'ProductDetailPage') with {
        data: {
            superAttributes: data.product.attributeMap.superAttributes,
            selectedAttributes: data.product.selectedAttributes,
            availableAttributes: data.product.availableAttributes,
        },
    } only %}

    {% widget 'ProductConfigurationProductViewDisplayWidget' args [data.product] only %}{% endwidget %}
    {% widget 'ProductConfigurationProductDetailPageButtonWidget' args [data.product] only %}{% endwidget %}

    {% widget 'AddToCartFormWidget' args [config, data.product, isDisabled, options] only %}
        {% block embeddedData %}
            {% widget 'ProductOptionConfiguratorWidget' args [data.product] only %}{% endwidget %}
            {% set shipmentTypeServicePointSelectorWidget = findWidget('SspShipmentTypeServicePointSelectorWidget', [data.product, data.isDisabled]) %}

            {% if not shipmentTypeServicePointSelectorWidget %}
                {% set shipmentTypeServicePointSelectorWidget = findWidget('ShipmentTypeServicePointSelectorWidget', [data.product, data.isDisabled]) %}
            {% endif %}

            {% if can('SeeAddToCartPermissionPlugin') %}
                {% if shipmentTypeServicePointSelectorWidget %}
                    {% widget shipmentTypeServicePointSelectorWidget only %}{% endwidget %}
                {% endif %}

                {% widget 'SspItemAssetSelectorWidget' args [data.product, data.isDisabled] only %}{% endwidget %}

                <div class="{{ data.config.name }}__add-to-cart">
                    {% widget 'ProductPackagingUnitWidget' args [data.product, data.isDisabled, data.options] only %}
                    {% elsewidget 'ManageProductMeasurementUnitWidget' args [data.product, data.isDisabled, data.options] only %}
                    {% nowidget %}
                        <div class="grid grid--stretch grid--justify">
                            {% include molecule('quantity-counter') with {
                                modifiers: ['right-space'],
                                data: {
                                    isDisabled: data.isDisabled,
                                },
                            } only %}

                            <div class="col">
                                <button
                                    class="button button--alternative button--big button--expand button--no-horizontal-padding"
                                    {{ data.isDisabled ? 'disabled' : 'data-init-single-click' }}
                                    {{ qa('add-to-cart-button') }}
                                >
                                    {% include atom('icon') with {
                                        modifiers: ['cart-plus'],
                                        data: {
                                            name: 'cart-plus',
                                        },
                                    } only %}
                                    {{ 'page.detail.add-to-cart' | trans }}
                                </button>
                            </div>
                        </div>
                    {% endwidget %}
                </div>

                {% widget 'AddToMultiCartWidget' args [data.isDisabled] only %}{% endwidget %}

                {% widget 'CartAddProductAsSeparateItemWidget' only %}{% endwidget %}
            {% endif %}

            {% if not data.product.available %}
                <p class="text-alert">{{ "product.detail.out_of_stock" | trans }}</p>
            {% endif %}
        {% endblock %}
    {% endwidget %}

    {% if not isAvailable and isProductConcrete %}
        {% widget 'AvailabilityNotificationSubscriptionWidget' args [data.product] only %}{% endwidget %}
    {% endif %}

    {% if can('SeeShoppingListPermissionPlugin') %}
        {% widget 'AddToShoppingListWidget' args [sku, isDisabled] only %}{% endwidget %}
    {% endif %}

    {% widget 'ProductDiscontinuedNoteWidget' args [sku] only %}{% endwidget %}
{% endblock %}
